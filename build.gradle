buildscript {
    ext {
        kotlinVersion = '1.4.30'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url 'https://jitpack.io' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'kotlinx-serialization'
}

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    sourceCompatibility = 1.8
}

subprojects {
    version = '0.0.1-SNAPSHOT'
    ext.appName = 'Herschel'
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

// Clearing Eclipse project data in root folder:
//tasks.eclipse.doLast {
//  delete '.project'
//  delete '.classpath'
//  delete '.settings/'
//}

// Run `gradle pack` task to generate skin.atlas file at assets/ui.
import com.badlogic.gdx.tools.texturepacker.TexturePacker

def planets = ['mercury', 'venus', 'earth', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune', 'pluto']

task packPlanets {
    planets.each { p ->
        doLast {
            // Note that if you need multiple atlases, you can duplicate the
            // TexturePacker.process invocation and change paths to generate
            // additional atlases with this task.
            TexturePacker.process(
                    "raw/planets/${p}",           // Raw assets path.
                    'assets/planets',        // Output directory.
                    p             // Name of the generated atlas (without extension).
            )
        }
    }
}
